{"version":3,"sources":["helpers.js","easing.js","../../src/perlin.js","../../src/index.js","script.js"],"names":["clamp","value","min","max","Math","flipP","p","abs","flipVal","val","sign","pToVal","zero","hundred","valToP","valToPwMid","turn","random","mathFunc","w","round","number","toDecimal","setCssProps","el","pairs","forEach","pair","style","setProperty","stayInRange","behavior","range","fullExceed","quotient","floor","exceed","wait","time","Promise","resolve","setTimeout","promiseWhile","data","condition","action","whilst","console","log","then","getWindowSize","body","document","html","documentElement","height","window","innerHeight","width","innerWidth","fullHeight","scrollHeight","offsetHeight","clientHeight","getUrlValues","urlString","location","search","substring","dict","split","exp","decodeURIComponent","getUrlValue","key","url","setUrlVar","string","k","encodeURIComponent","history","replaceState","pathname","slice","delUrlVal","URL","set","get","getDict","del","addMultiEventListener","s","fn","e","addEventListener","serialize","form","serialized","i","elements","length","field","name","disabled","type","n","options","selected","push","checked","join","module","exports","linear","t","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSin","sin","PI","easeOutSin","easeInOutSin","create","jitter","perm","gradsX","gradsY","jitX","jitY","init","other","Number","MAX_SAFE_INTEGER","cos","falloff","surflet","x","y","gradX","gradY","perlin","result","cellX","cellY","gridY","gridX","hash","size","_size","_mask","_perm","_gradsX","_gradsY","_surflet","_falloff","perlinModule","factories","require","getPerlin","Noise","firstBars","querySelectorAll","valuesList","setInterval","generateNextValue","noise","easing","shift","propertiesList","anime","targets","translateY","duration","perlinXes","marginLeft"],"mappings":"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","file":"script.f83f4618.js","sourceRoot":"..\\src","sourcesContent":["const clamp = (value, min, max) => Math.min(Math.max(value, min), max)\r\n\r\nconst flipP = p => (p >= 0 ? Math.abs(p - 1) : Math.abs(p) - 1)\r\n\r\nconst flipVal = (val, min, max) =>\r\n\tMath.abs(val * (Math.sign(val) || 1) - max) + min\r\n\r\nconst pToVal = (p, zero, hundred) => p * (hundred - zero) + zero\r\n\r\nfunction valToP(value, min, max) {\r\n\tif (min > max) {\r\n\t\t;[min, max] = [max, min]\r\n\t\tvalue = flipVal(value, min, max)\r\n\t}\r\n\treturn (value - min) / (max - min)\r\n}\r\n\r\nfunction valToPwMid(value, min, max, turn = pToVal(0.5, min, max)) {\r\n\tif (min > max) {\r\n\t\t;[min, max] = [max, min]\r\n\t\tturn = flipVal(turn, min, max)\r\n\t\tvalue = flipVal(value, min, max)\r\n\t}\r\n\treturn value < turn\r\n\t\t? (value - turn) / (turn - min)\r\n\t\t: (value - turn) / (max - turn)\r\n}\r\n\r\nconst random = (min, max, mathFunc = null) => {\r\n\tlet w = Math.random() * (max - min) + min\r\n\treturn mathFunc == null ? w : Math[mathFunc](w)\r\n}\r\n\r\nconst round = (number, toDecimal = 1) =>\r\n\tMath.round(number / (toDecimal < 0 ? 1 / toDecimal : toDecimal)) /\r\n\t(toDecimal > 0 ? 1 / toDecimal : toDecimal)\r\n\r\nconst setCssProps = (el, ...pairs) =>\r\n\tpairs.forEach(pair => el.style.setProperty(pair[0], pair[1]))\r\n\r\nconst stayInRange = (value, min, max, behavior = 'loop') => {\r\n\t// behaviors:\r\n\t//\t\t'loop' - exceeding value comes back around from the other end\r\n\t//\t\t'bounce' - exceeding value 'bounces' of the end it exceeds\r\n\t//\t\t'flat' - anything below min will be min, and the same with max\r\n\r\n\tif (value >= min && value <= max) return value\r\n\r\n\tif (behavior == 'loop') {\r\n\t\t// this\r\n\t\t// while (value < min || value > max) {\r\n\t\t// \tvalue =\r\n\t\t// \t\tvalue < min\r\n\t\t// \t\t\t? max - Math.abs(min - value)\r\n\t\t// \t\t\t: min + Math.abs(max - value)\r\n\t\t// }\r\n\r\n\t\t// or this\r\n\t\tlet range = Math.abs(min - max),\r\n\t\t\tfullExceed = value < min ? value - min : value - max,\r\n\t\t\tquotient = Math.floor(Math.abs(fullExceed) / range),\r\n\t\t\texceed = Math.abs(fullExceed) - quotient * range\r\n\r\n\t\tvalue = value < min ? max - exceed : min + exceed\r\n\t} else if (behavior == 'bounce') {\r\n\t\tlet range = Math.abs(min - max),\r\n\t\t\tfullExceed = value < min ? value - min : value - max,\r\n\t\t\tquotient = Math.floor(Math.abs(fullExceed) / range),\r\n\t\t\texceed = Math.abs(fullExceed) - quotient * range\r\n\r\n\t\tvalue =\r\n\t\t\t(value < min && quotient % 2 === 0) || quotient % 2 !== 0\r\n\t\t\t\t? min + exceed\r\n\t\t\t\t: max - exceed\r\n\t} else if (behavior == 'flat') value = value < min ? min : max\r\n\r\n\treturn value\r\n}\r\n\r\nconst wait = time => new Promise(resolve => setTimeout(resolve, time))\r\n\r\nconst promiseWhile = (data, condition, action) => {\r\n\tvar whilst = data => {\r\n\t\tconsole.log('turn')\r\n\t\treturn condition(data) ? action(data).then(whilst) : Promise.resolve(data)\r\n\t}\r\n\treturn whilst(data)\r\n}\r\n\r\nconst getWindowSize = () => {\r\n\tvar body = document.body,\r\n\t\thtml = document.documentElement\r\n\treturn {\r\n\t\theight: window.innerHeight,\r\n\t\twidth: window.innerWidth,\r\n\t\tfullHeight: Math.max(\r\n\t\t\tbody.scrollHeight,\r\n\t\t\tbody.offsetHeight,\r\n\t\t\thtml.clientHeight,\r\n\t\t\thtml.scrollHeight,\r\n\t\t\thtml.offsetHeight,\r\n\t\t),\r\n\t}\r\n}\r\n\r\nconst getUrlValues = () => {\r\n\t// returns dictionary with key & value pars from URL\r\n\tvar urlString = location.search.substring(1)\r\n\tif (urlString === '') return\r\n\r\n\tlet dict = {}\r\n\r\n\turlString.split('&').forEach(exp => {\r\n\t\tif (exp.search(/=/) == -1) {\r\n\t\t\t// if in URL there was no key value par but only one value:\r\n\t\t\tdict[exp] = null\r\n\t\t} else {\r\n\t\t\tlet pair = exp.split('=')\r\n\t\t\tdict[pair[0]] = decodeURIComponent(pair[1])\r\n\t\t}\r\n\t})\r\n\r\n\treturn dict\r\n}\r\n\r\nconst getUrlValue = key => {\r\n\t// returns true / false if key is present or its value if present\r\n\tvar url = location.search.substring(1)\r\n\tif (url === '') return false\r\n\r\n\tif (url.search(/=/) == -1 && url == key) return true\r\n\telse {\r\n\t\tlet val\r\n\t\turl.split('&').forEach(exp => {\r\n\t\t\tlet pair = exp.split('=')\r\n\t\t\tif (pair[0] == key) val = pair[1]\r\n\t\t})\r\n\t\treturn decodeURIComponent(val)\r\n\t}\r\n\treturn false\r\n}\r\n\r\nfunction setUrlVar(key = null, value = null, dictionary = null) {\r\n\tvar dict = dictionary || getUrlValues() || {},\r\n\t\tstring = '?'\r\n\r\n\tif (key !== null) dict[key] = value\r\n\r\n\tfor (let k in dict)\r\n\t\tstring +=\r\n\t\t\tdict[k] !== null\r\n\t\t\t\t? k + '=' + encodeURIComponent(dict[k]) + '&'\r\n\t\t\t\t: k + '&'\r\n\r\n\thistory.replaceState(null, null, location.pathname + string.slice(0, -1))\r\n}\r\n\r\nfunction delUrlVal(key) {\r\n\tvar dict = getUrlValues() || {}\r\n\tconsole.log(dict)\r\n\tfor (let k in dict) {\r\n\t\tif (k == key) delete dict[key]\r\n\t}\r\n\tconsole.log(dict)\r\n\r\n\tsetUrlVar(null, null, dict)\r\n}\r\n\r\nconst URL = {\r\n\tset: setUrlVar,\r\n\tget: getUrlValue,\r\n\tgetDict: getUrlValues,\r\n\tdel: delUrlVal,\r\n}\r\n\r\nfunction addMultiEventListener(el, s, fn) {\r\n\ts.split(' ').forEach(e => el.addEventListener(e, fn, false))\r\n}\r\n// Usage:\r\n// addMultiEventListener(window, 'resize scroll', () => { code... });\r\n\r\n/*!\r\n * Serialize all form data into a query string\r\n * (c) 2018 Chris Ferdinandi, MIT License, https://gomakethings.com\r\n * @param  {Node}   form The form to serialize\r\n * @return {String}      The serialized form data\r\n */\r\nvar serialize = function(form) {\r\n\t// Setup our serialized data\r\n\tvar serialized = []\r\n\r\n\t// Loop through each field in the form\r\n\tfor (var i = 0; i < form.elements.length; i++) {\r\n\t\tvar field = form.elements[i]\r\n\r\n\t\t// Don't serialize fields without a name, submits, buttons, file and reset inputs, and disabled fields\r\n\t\tif (\r\n\t\t\t!field.name ||\r\n\t\t\tfield.disabled ||\r\n\t\t\tfield.type === 'file' ||\r\n\t\t\tfield.type === 'reset' ||\r\n\t\t\tfield.type === 'submit' ||\r\n\t\t\tfield.type === 'button'\r\n\t\t)\r\n\t\t\tcontinue\r\n\r\n\t\t// If a multi-select, get all selections\r\n\t\tif (field.type === 'select-multiple') {\r\n\t\t\tfor (var n = 0; n < field.options.length; n++) {\r\n\t\t\t\tif (!field.options[n].selected) continue\r\n\t\t\t\tserialized.push(\r\n\t\t\t\t\tencodeURIComponent(field.name) +\r\n\t\t\t\t\t\t'=' +\r\n\t\t\t\t\t\tencodeURIComponent(field.options[n].value),\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t} else if (\r\n\t\t\t(field.type !== 'checkbox' && field.type !== 'radio') ||\r\n\t\t\tfield.checked\r\n\t\t) {\r\n\t\t\t// Convert field data to a query string\r\n\t\t\tserialized.push(\r\n\t\t\t\tencodeURIComponent(field.name) +\r\n\t\t\t\t\t'=' +\r\n\t\t\t\t\tencodeURIComponent(field.value),\r\n\t\t\t)\r\n\t\t}\r\n\t}\r\n\r\n\treturn serialized.join('&')\r\n}\r\n\r\nmodule.exports = {\r\n\tclamp,\r\n\tvalToP,\r\n\tpToVal,\r\n\trandom,\r\n\tround,\r\n\tgetWindowSize,\r\n\tstayInRange,\r\n\tURL,\r\n\taddMultiEventListener,\r\n\tserialize,\r\n\tsetCssProps,\r\n\twait,\r\n\tpromiseWhile,\r\n}\r\n","/*\r\n * Easing Functions - inspired from http://gizma.com/easing/\r\n * only considering the t value for the range [0, 1] => [0, 1]\r\n */\r\nexport default {\r\n\t// no easing, no acceleration\r\n\tlinear: t => t,\r\n\t// accelerating from zero velocity\r\n\teaseInQuad: t => t * t,\r\n\t// decelerating to zero velocity\r\n\teaseOutQuad: t => t * (2 - t),\r\n\t// acceleration until halfway, then deceleration\r\n\teaseInOutQuad: t => (t < 0.5 ? 2 * t * t : -1 + (4 - 2 * t) * t),\r\n\t// accelerating from zero velocity\r\n\teaseInCubic: t => t * t * t,\r\n\t// decelerating to zero velocity\r\n\teaseOutCubic: t => --t * t * t + 1,\r\n\t// acceleration until halfway, then deceleration\r\n\teaseInOutCubic: t =>\r\n\t\tt < 0.5 ? 4 * t * t * t : (t - 1) * (2 * t - 2) * (2 * t - 2) + 1,\r\n\t// accelerating from zero velocity\r\n\teaseInQuart: t => t * t * t * t,\r\n\t// decelerating to zero velocity\r\n\teaseOutQuart: t => 1 - --t * t * t * t,\r\n\t// acceleration until halfway, then deceleration\r\n\teaseInOutQuart: t => (t < 0.5 ? 8 * t * t * t * t : 1 - 8 * --t * t * t * t),\r\n\t// accelerating from zero velocity\r\n\teaseInQuint: t => t * t * t * t * t,\r\n\t// decelerating to zero velocity\r\n\teaseOutQuint: t => 1 + --t * t * t * t * t,\r\n\t// acceleration until halfway, then deceleration\r\n\teaseInOutQuint: t =>\r\n\t\tt < 0.5 ? 16 * t * t * t * t * t : 1 + 16 * --t * t * t * t * t,\r\n\teaseInSin: t => 1 + Math.sin((Math.PI / 2) * t - Math.PI / 2),\r\n\teaseOutSin: t => Math.sin((Math.PI / 2) * t),\r\n\teaseInOutSin: t => (1 + Math.sin(Math.PI * t - Math.PI / 2)) / 2,\r\n}\r\n","/**\n * Create a 2d perlin noise function.\n *\n * The returned function is initialized and ready for use.\n */\nexport const create = ({\n  // function() that, when called, returns an assumed random number between 0 and 1,\n  // per the definition of Math.random.\n  random = Math.random,\n  // Jitter is useful for offsetting the zero of the surflet from integer values\n  // of x,y. False to turn off jitter.\n  jitter = true,\n} = {}) => {\n  // Size, mask, perm, gradsX, and gradsY are all related.\n  // How many unit vectors will we create?\n  const size = 256\n  // Used to constrain the absolute values of incoming points to our vector lookup table.\n  const mask = size - 1\n  // Our hash lookup into of, \"Which gradient vector should I use for a particular point?\"\n  const perm = []\n  // gradsX and gradsY together form the 2d gradient vector we use, with randomized\n  // lookup via `perm`.\n  const gradsX = []\n  const gradsY = []\n  // jitX and jitY together allow us, in general, to offset the zero value of\n  // an integer input {x, y}. We use this in our implementation by default as\n  // default grid coordinates are integer based. Smoother noise can be added\n  // by the caller.\n  const jitX = []\n  const jitY = []\n\n  /**\n   * Generate a set of randomized gradient vectors used in our noise calculations.\n   *\n   * Automatically called when creating a new function. Can be called by the\n   * user to reset the tables of that particular instance of the noise function.\n   */\n  const init = () => {\n    for (let i = 0; i < size; ++i) {\n      const other = Math.floor(random() * Number.MAX_SAFE_INTEGER) % (i + 1)\n      // Generate a randomized list of integers.\n      // see: https://en.wikipedia.org/wiki/Fisher%E2%80%93Yates_shuffle#The_.22inside-out.22_algorithm\n      if (i > other) {\n        perm[i] = perm[other]\n      }\n      perm[other] = i\n\n      // All the unit vectors in a circle of `size`.\n      gradsX[i] = Math.cos(2 * Math.PI * i / size)\n      gradsY[i] = Math.sin(2 * Math.PI * i / size)\n      // Per notes, jitter offset is a random number between 0 and 1 and is applied\n      // to each gradient vector. As jitter is applied via addition, setting to\n      // 0 is turning it off.\n      jitX[i] = jitter ? random() : 0\n      jitY[i] = jitter ? random() : 0\n    }\n  }\n\n  // Return value between 1 and 0; 1 at 0, 0 at >= 1 or -1.\n  // The unit vectors beyond a given point will not contribute to the result.\n  const falloff = (t) => {\n    t = Math.abs(t)\n    return t >= 1 ? 0 : 1 - ((3 - (2 * t)) * t * t)\n  }\n\n  // Return surflet value at a point.\n  // The definition of surflet from the code we stole means that without any\n  // jitter, the value at an integer coord will always be 0.\n  const surflet = (x, y, gradX, gradY) => {\n    return falloff(x) * falloff(y) * (gradX * x + gradY * y)\n  }\n\n  // Take an {x: float, y: float} coordinate and return a float value of the\n  // noise at that particular coordinate.\n  // Due to jitter, this function is generally friendly to integer based {x,y}\n  // coordinates.\n  const perlin = (x, y) => {\n    let result = 0\n    const cellX = Math.floor(x)\n    const cellY = Math.floor(y)\n    for (let gridY = cellY; gridY <= cellY + 1; ++gridY) {\n      for (let gridX = cellX; gridX <= cellX + 1; ++gridX) {\n        const hash = perm[(perm[gridX & mask] + gridY) & mask]\n        // Original, non-jittered:\n        // result += surflet(x - gridX, y - gridY, gradsX[hash], gradsY[hash])\n        // add \"jitter\" to make it friendlier to {x, y} being integers.\n        result += surflet(x - gridX + jitX[hash], y - gridY + jitY[hash], gradsX[hash], gradsY[hash])\n      }\n    }\n    return result\n  }\n\n  // Initialize.\n  init()\n  // Export \"private\" properties/methods for introspection and testing.\n  // Meant to be accessed read-only.\n  perlin._size = size\n  perlin._mask = mask\n  perlin._perm = perm\n  perlin._gradsX = gradsX\n  perlin._gradsY = gradsY\n  perlin._surflet = surflet\n  perlin._falloff = falloff\n  // Public API.\n  // Allow and encourage reininitialization if needed.\n  perlin.init = init\n\n  return perlin\n}\n","import * as perlinModule from './perlin'\n\n// Singleton access.\nexport const perlin = perlinModule.create()\n\n// For those that need to create and configure their own instances.\nexport const factories = {\n  perlin: perlinModule.create\n}\n","const { stayInRange } = require('./helpers')\r\n\r\n// import anime from 'animejs'\r\nimport easing from './easing'\r\nimport Noise from '@trinkets/noise'\r\nconst getPerlin = Noise['@trinkets/noise'].perlin\r\n\r\nconst firstBars = document.querySelectorAll('#first .bar'),\r\n\tvaluesList = []\r\n\r\nfor (let i = 0; i < firstBars.length; i++) valuesList.push(0)\r\n\r\nsetInterval(generateNextValue, 300)\r\n\r\nlet n = 0\r\nfunction generateNextValue() {\r\n\tlet noise = getPerlin(++n / 3, 0)\r\n\t// noise+=.5\r\n\tnoise = stayInRange(noise, 0, 0.5, 'bounce')\r\n\tnoise *= 2\r\n\t// noise = round(noise, -100)\r\n\r\n\tnoise = easing.easeInOutSin(noise)\r\n\r\n\tvaluesList.shift()\r\n\tvaluesList.push(noise)\r\n\r\n\tlet propertiesList = []\r\n\r\n\tfor (let i = 0; i < firstBars.length; i++) {\r\n\t\tpropertiesList.push([`--value${i}`, valuesList[i] + 'px'])\r\n\t}\r\n\t// setCssProps(first, ...propertiesList)\r\n\r\n\tanime({\r\n\t\ttargets: firstBars,\r\n\t\ttranslateY: (el, i) => -valuesList[i] * (85 - 12),\r\n\t\tduration: 3000,\r\n\t\teasing: 'easeOutElastic(1, .8)',\r\n\t})\r\n}\r\n\r\n// logging perlin noise\r\nconst perlinXes = document.querySelectorAll('.perlin p')\r\nperlinXes.forEach((p, i) => {\r\n\tlet noise = getPerlin(i / 3, 0)\r\n\t// noise+=.5\r\n\tnoise = stayInRange(noise, 0, 1, 'bounce')\r\n\tnoise = easing.easeOutQuad(noise)\r\n\r\n\tp.style.marginLeft = noise * 200 + 'px'\r\n})\r\n"]}