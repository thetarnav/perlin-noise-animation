{"version":3,"sources":["noise.js"],"names":["global","module","noise","Grad","x","y","z","prototype","dot2","dot3","grad3","p","perm","Array","gradP","seed","Math","floor","i","v","F2","sqrt","G2","F3","G3","simplex2","xin","yin","n0","n1","n2","s","j","t","x0","y0","i1","j1","x1","y1","x2","y2","gi0","gi1","gi2","t0","t1","t2","simplex3","zin","n3","k","z0","k1","i2","j2","k2","z1","z2","x3","y3","z3","gi3","t3","fade","lerp","a","b","perlin2","X","Y","n00","n01","n10","n11","u","perlin3","Z","n000","n001","n010","n011","n100","n101","n110","n111","w"],"mappings":"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","file":"noise.5bd271c7.js","sourceRoot":"..\\src","sourcesContent":["/*\r\n * A speed-improved perlin and simplex noise algorithms for 2D.\r\n *\r\n * Based on example code by Stefan Gustavson (stegu@itn.liu.se).\r\n * Optimisations by Peter Eastman (peastman@drizzle.stanford.edu).\r\n * Better rank ordering method by Stefan Gustavson in 2012.\r\n * Converted to Javascript by Joseph Gentle.\r\n *\r\n * Version 2012-03-09\r\n *\r\n * This code was placed in the public domain by its original author,\r\n * Stefan Gustavson. You may use it as you see fit, but\r\n * attribution is appreciated.\r\n *\r\n */\r\n\r\n;(function(global) {\r\n\tvar module = (global.noise = {})\r\n\r\n\tfunction Grad(x, y, z) {\r\n\t\tthis.x = x\r\n\t\tthis.y = y\r\n\t\tthis.z = z\r\n\t}\r\n\r\n\tGrad.prototype.dot2 = function(x, y) {\r\n\t\treturn this.x * x + this.y * y\r\n\t}\r\n\r\n\tGrad.prototype.dot3 = function(x, y, z) {\r\n\t\treturn this.x * x + this.y * y + this.z * z\r\n\t}\r\n\r\n\tvar grad3 = [\r\n\t\tnew Grad(1, 1, 0),\r\n\t\tnew Grad(-1, 1, 0),\r\n\t\tnew Grad(1, -1, 0),\r\n\t\tnew Grad(-1, -1, 0),\r\n\t\tnew Grad(1, 0, 1),\r\n\t\tnew Grad(-1, 0, 1),\r\n\t\tnew Grad(1, 0, -1),\r\n\t\tnew Grad(-1, 0, -1),\r\n\t\tnew Grad(0, 1, 1),\r\n\t\tnew Grad(0, -1, 1),\r\n\t\tnew Grad(0, 1, -1),\r\n\t\tnew Grad(0, -1, -1),\r\n\t]\r\n\r\n\tvar p = [\r\n\t\t151,\r\n\t\t160,\r\n\t\t137,\r\n\t\t91,\r\n\t\t90,\r\n\t\t15,\r\n\t\t131,\r\n\t\t13,\r\n\t\t201,\r\n\t\t95,\r\n\t\t96,\r\n\t\t53,\r\n\t\t194,\r\n\t\t233,\r\n\t\t7,\r\n\t\t225,\r\n\t\t140,\r\n\t\t36,\r\n\t\t103,\r\n\t\t30,\r\n\t\t69,\r\n\t\t142,\r\n\t\t8,\r\n\t\t99,\r\n\t\t37,\r\n\t\t240,\r\n\t\t21,\r\n\t\t10,\r\n\t\t23,\r\n\t\t190,\r\n\t\t6,\r\n\t\t148,\r\n\t\t247,\r\n\t\t120,\r\n\t\t234,\r\n\t\t75,\r\n\t\t0,\r\n\t\t26,\r\n\t\t197,\r\n\t\t62,\r\n\t\t94,\r\n\t\t252,\r\n\t\t219,\r\n\t\t203,\r\n\t\t117,\r\n\t\t35,\r\n\t\t11,\r\n\t\t32,\r\n\t\t57,\r\n\t\t177,\r\n\t\t33,\r\n\t\t88,\r\n\t\t237,\r\n\t\t149,\r\n\t\t56,\r\n\t\t87,\r\n\t\t174,\r\n\t\t20,\r\n\t\t125,\r\n\t\t136,\r\n\t\t171,\r\n\t\t168,\r\n\t\t68,\r\n\t\t175,\r\n\t\t74,\r\n\t\t165,\r\n\t\t71,\r\n\t\t134,\r\n\t\t139,\r\n\t\t48,\r\n\t\t27,\r\n\t\t166,\r\n\t\t77,\r\n\t\t146,\r\n\t\t158,\r\n\t\t231,\r\n\t\t83,\r\n\t\t111,\r\n\t\t229,\r\n\t\t122,\r\n\t\t60,\r\n\t\t211,\r\n\t\t133,\r\n\t\t230,\r\n\t\t220,\r\n\t\t105,\r\n\t\t92,\r\n\t\t41,\r\n\t\t55,\r\n\t\t46,\r\n\t\t245,\r\n\t\t40,\r\n\t\t244,\r\n\t\t102,\r\n\t\t143,\r\n\t\t54,\r\n\t\t65,\r\n\t\t25,\r\n\t\t63,\r\n\t\t161,\r\n\t\t1,\r\n\t\t216,\r\n\t\t80,\r\n\t\t73,\r\n\t\t209,\r\n\t\t76,\r\n\t\t132,\r\n\t\t187,\r\n\t\t208,\r\n\t\t89,\r\n\t\t18,\r\n\t\t169,\r\n\t\t200,\r\n\t\t196,\r\n\t\t135,\r\n\t\t130,\r\n\t\t116,\r\n\t\t188,\r\n\t\t159,\r\n\t\t86,\r\n\t\t164,\r\n\t\t100,\r\n\t\t109,\r\n\t\t198,\r\n\t\t173,\r\n\t\t186,\r\n\t\t3,\r\n\t\t64,\r\n\t\t52,\r\n\t\t217,\r\n\t\t226,\r\n\t\t250,\r\n\t\t124,\r\n\t\t123,\r\n\t\t5,\r\n\t\t202,\r\n\t\t38,\r\n\t\t147,\r\n\t\t118,\r\n\t\t126,\r\n\t\t255,\r\n\t\t82,\r\n\t\t85,\r\n\t\t212,\r\n\t\t207,\r\n\t\t206,\r\n\t\t59,\r\n\t\t227,\r\n\t\t47,\r\n\t\t16,\r\n\t\t58,\r\n\t\t17,\r\n\t\t182,\r\n\t\t189,\r\n\t\t28,\r\n\t\t42,\r\n\t\t223,\r\n\t\t183,\r\n\t\t170,\r\n\t\t213,\r\n\t\t119,\r\n\t\t248,\r\n\t\t152,\r\n\t\t2,\r\n\t\t44,\r\n\t\t154,\r\n\t\t163,\r\n\t\t70,\r\n\t\t221,\r\n\t\t153,\r\n\t\t101,\r\n\t\t155,\r\n\t\t167,\r\n\t\t43,\r\n\t\t172,\r\n\t\t9,\r\n\t\t129,\r\n\t\t22,\r\n\t\t39,\r\n\t\t253,\r\n\t\t19,\r\n\t\t98,\r\n\t\t108,\r\n\t\t110,\r\n\t\t79,\r\n\t\t113,\r\n\t\t224,\r\n\t\t232,\r\n\t\t178,\r\n\t\t185,\r\n\t\t112,\r\n\t\t104,\r\n\t\t218,\r\n\t\t246,\r\n\t\t97,\r\n\t\t228,\r\n\t\t251,\r\n\t\t34,\r\n\t\t242,\r\n\t\t193,\r\n\t\t238,\r\n\t\t210,\r\n\t\t144,\r\n\t\t12,\r\n\t\t191,\r\n\t\t179,\r\n\t\t162,\r\n\t\t241,\r\n\t\t81,\r\n\t\t51,\r\n\t\t145,\r\n\t\t235,\r\n\t\t249,\r\n\t\t14,\r\n\t\t239,\r\n\t\t107,\r\n\t\t49,\r\n\t\t192,\r\n\t\t214,\r\n\t\t31,\r\n\t\t181,\r\n\t\t199,\r\n\t\t106,\r\n\t\t157,\r\n\t\t184,\r\n\t\t84,\r\n\t\t204,\r\n\t\t176,\r\n\t\t115,\r\n\t\t121,\r\n\t\t50,\r\n\t\t45,\r\n\t\t127,\r\n\t\t4,\r\n\t\t150,\r\n\t\t254,\r\n\t\t138,\r\n\t\t236,\r\n\t\t205,\r\n\t\t93,\r\n\t\t222,\r\n\t\t114,\r\n\t\t67,\r\n\t\t29,\r\n\t\t24,\r\n\t\t72,\r\n\t\t243,\r\n\t\t141,\r\n\t\t128,\r\n\t\t195,\r\n\t\t78,\r\n\t\t66,\r\n\t\t215,\r\n\t\t61,\r\n\t\t156,\r\n\t\t180,\r\n\t]\r\n\t// To remove the need for index wrapping, double the permutation table length\r\n\tvar perm = new Array(512)\r\n\tvar gradP = new Array(512)\r\n\r\n\t// This isn't a very good seeding function, but it works ok. It supports 2^16\r\n\t// different seed values. Write something better if you need more seeds.\r\n\tmodule.seed = function(seed) {\r\n\t\tif (seed > 0 && seed < 1) {\r\n\t\t\t// Scale the seed out\r\n\t\t\tseed *= 65536\r\n\t\t}\r\n\r\n\t\tseed = Math.floor(seed)\r\n\t\tif (seed < 256) {\r\n\t\t\tseed |= seed << 8\r\n\t\t}\r\n\r\n\t\tfor (var i = 0; i < 256; i++) {\r\n\t\t\tvar v\r\n\t\t\tif (i & 1) {\r\n\t\t\t\tv = p[i] ^ (seed & 255)\r\n\t\t\t} else {\r\n\t\t\t\tv = p[i] ^ ((seed >> 8) & 255)\r\n\t\t\t}\r\n\r\n\t\t\tperm[i] = perm[i + 256] = v\r\n\t\t\tgradP[i] = gradP[i + 256] = grad3[v % 12]\r\n\t\t}\r\n\t}\r\n\r\n\tmodule.seed(0)\r\n\r\n\t/*\r\n\tfor(var i=0; i<256; i++) {\r\n\t  perm[i] = perm[i + 256] = p[i];\r\n\t  gradP[i] = gradP[i + 256] = grad3[perm[i] % 12];\r\n\t}*/\r\n\r\n\t// Skewing and unskewing factors for 2, 3, and 4 dimensions\r\n\tvar F2 = 0.5 * (Math.sqrt(3) - 1)\r\n\tvar G2 = (3 - Math.sqrt(3)) / 6\r\n\r\n\tvar F3 = 1 / 3\r\n\tvar G3 = 1 / 6\r\n\r\n\t// 2D simplex noise\r\n\tmodule.simplex2 = function(xin, yin) {\r\n\t\tvar n0, n1, n2 // Noise contributions from the three corners\r\n\t\t// Skew the input space to determine which simplex cell we're in\r\n\t\tvar s = (xin + yin) * F2 // Hairy factor for 2D\r\n\t\tvar i = Math.floor(xin + s)\r\n\t\tvar j = Math.floor(yin + s)\r\n\t\tvar t = (i + j) * G2\r\n\t\tvar x0 = xin - i + t // The x,y distances from the cell origin, unskewed.\r\n\t\tvar y0 = yin - j + t\r\n\t\t// For the 2D case, the simplex shape is an equilateral triangle.\r\n\t\t// Determine which simplex we are in.\r\n\t\tvar i1, j1 // Offsets for second (middle) corner of simplex in (i,j) coords\r\n\t\tif (x0 > y0) {\r\n\t\t\t// lower triangle, XY order: (0,0)->(1,0)->(1,1)\r\n\t\t\ti1 = 1\r\n\t\t\tj1 = 0\r\n\t\t} else {\r\n\t\t\t// upper triangle, YX order: (0,0)->(0,1)->(1,1)\r\n\t\t\ti1 = 0\r\n\t\t\tj1 = 1\r\n\t\t}\r\n\t\t// A step of (1,0) in (i,j) means a step of (1-c,-c) in (x,y), and\r\n\t\t// a step of (0,1) in (i,j) means a step of (-c,1-c) in (x,y), where\r\n\t\t// c = (3-sqrt(3))/6\r\n\t\tvar x1 = x0 - i1 + G2 // Offsets for middle corner in (x,y) unskewed coords\r\n\t\tvar y1 = y0 - j1 + G2\r\n\t\tvar x2 = x0 - 1 + 2 * G2 // Offsets for last corner in (x,y) unskewed coords\r\n\t\tvar y2 = y0 - 1 + 2 * G2\r\n\t\t// Work out the hashed gradient indices of the three simplex corners\r\n\t\ti &= 255\r\n\t\tj &= 255\r\n\t\tvar gi0 = gradP[i + perm[j]]\r\n\t\tvar gi1 = gradP[i + i1 + perm[j + j1]]\r\n\t\tvar gi2 = gradP[i + 1 + perm[j + 1]]\r\n\t\t// Calculate the contribution from the three corners\r\n\t\tvar t0 = 0.5 - x0 * x0 - y0 * y0\r\n\t\tif (t0 < 0) {\r\n\t\t\tn0 = 0\r\n\t\t} else {\r\n\t\t\tt0 *= t0\r\n\t\t\tn0 = t0 * t0 * gi0.dot2(x0, y0) // (x,y) of grad3 used for 2D gradient\r\n\t\t}\r\n\t\tvar t1 = 0.5 - x1 * x1 - y1 * y1\r\n\t\tif (t1 < 0) {\r\n\t\t\tn1 = 0\r\n\t\t} else {\r\n\t\t\tt1 *= t1\r\n\t\t\tn1 = t1 * t1 * gi1.dot2(x1, y1)\r\n\t\t}\r\n\t\tvar t2 = 0.5 - x2 * x2 - y2 * y2\r\n\t\tif (t2 < 0) {\r\n\t\t\tn2 = 0\r\n\t\t} else {\r\n\t\t\tt2 *= t2\r\n\t\t\tn2 = t2 * t2 * gi2.dot2(x2, y2)\r\n\t\t}\r\n\t\t// Add contributions from each corner to get the final noise value.\r\n\t\t// The result is scaled to return values in the interval [-1,1].\r\n\t\treturn 70 * (n0 + n1 + n2)\r\n\t}\r\n\r\n\t// 3D simplex noise\r\n\tmodule.simplex3 = function(xin, yin, zin) {\r\n\t\tvar n0, n1, n2, n3 // Noise contributions from the four corners\r\n\r\n\t\t// Skew the input space to determine which simplex cell we're in\r\n\t\tvar s = (xin + yin + zin) * F3 // Hairy factor for 2D\r\n\t\tvar i = Math.floor(xin + s)\r\n\t\tvar j = Math.floor(yin + s)\r\n\t\tvar k = Math.floor(zin + s)\r\n\r\n\t\tvar t = (i + j + k) * G3\r\n\t\tvar x0 = xin - i + t // The x,y distances from the cell origin, unskewed.\r\n\t\tvar y0 = yin - j + t\r\n\t\tvar z0 = zin - k + t\r\n\r\n\t\t// For the 3D case, the simplex shape is a slightly irregular tetrahedron.\r\n\t\t// Determine which simplex we are in.\r\n\t\tvar i1, j1, k1 // Offsets for second corner of simplex in (i,j,k) coords\r\n\t\tvar i2, j2, k2 // Offsets for third corner of simplex in (i,j,k) coords\r\n\t\tif (x0 >= y0) {\r\n\t\t\tif (y0 >= z0) {\r\n\t\t\t\ti1 = 1\r\n\t\t\t\tj1 = 0\r\n\t\t\t\tk1 = 0\r\n\t\t\t\ti2 = 1\r\n\t\t\t\tj2 = 1\r\n\t\t\t\tk2 = 0\r\n\t\t\t} else if (x0 >= z0) {\r\n\t\t\t\ti1 = 1\r\n\t\t\t\tj1 = 0\r\n\t\t\t\tk1 = 0\r\n\t\t\t\ti2 = 1\r\n\t\t\t\tj2 = 0\r\n\t\t\t\tk2 = 1\r\n\t\t\t} else {\r\n\t\t\t\ti1 = 0\r\n\t\t\t\tj1 = 0\r\n\t\t\t\tk1 = 1\r\n\t\t\t\ti2 = 1\r\n\t\t\t\tj2 = 0\r\n\t\t\t\tk2 = 1\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tif (y0 < z0) {\r\n\t\t\t\ti1 = 0\r\n\t\t\t\tj1 = 0\r\n\t\t\t\tk1 = 1\r\n\t\t\t\ti2 = 0\r\n\t\t\t\tj2 = 1\r\n\t\t\t\tk2 = 1\r\n\t\t\t} else if (x0 < z0) {\r\n\t\t\t\ti1 = 0\r\n\t\t\t\tj1 = 1\r\n\t\t\t\tk1 = 0\r\n\t\t\t\ti2 = 0\r\n\t\t\t\tj2 = 1\r\n\t\t\t\tk2 = 1\r\n\t\t\t} else {\r\n\t\t\t\ti1 = 0\r\n\t\t\t\tj1 = 1\r\n\t\t\t\tk1 = 0\r\n\t\t\t\ti2 = 1\r\n\t\t\t\tj2 = 1\r\n\t\t\t\tk2 = 0\r\n\t\t\t}\r\n\t\t}\r\n\t\t// A step of (1,0,0) in (i,j,k) means a step of (1-c,-c,-c) in (x,y,z),\r\n\t\t// a step of (0,1,0) in (i,j,k) means a step of (-c,1-c,-c) in (x,y,z), and\r\n\t\t// a step of (0,0,1) in (i,j,k) means a step of (-c,-c,1-c) in (x,y,z), where\r\n\t\t// c = 1/6.\r\n\t\tvar x1 = x0 - i1 + G3 // Offsets for second corner\r\n\t\tvar y1 = y0 - j1 + G3\r\n\t\tvar z1 = z0 - k1 + G3\r\n\r\n\t\tvar x2 = x0 - i2 + 2 * G3 // Offsets for third corner\r\n\t\tvar y2 = y0 - j2 + 2 * G3\r\n\t\tvar z2 = z0 - k2 + 2 * G3\r\n\r\n\t\tvar x3 = x0 - 1 + 3 * G3 // Offsets for fourth corner\r\n\t\tvar y3 = y0 - 1 + 3 * G3\r\n\t\tvar z3 = z0 - 1 + 3 * G3\r\n\r\n\t\t// Work out the hashed gradient indices of the four simplex corners\r\n\t\ti &= 255\r\n\t\tj &= 255\r\n\t\tk &= 255\r\n\t\tvar gi0 = gradP[i + perm[j + perm[k]]]\r\n\t\tvar gi1 = gradP[i + i1 + perm[j + j1 + perm[k + k1]]]\r\n\t\tvar gi2 = gradP[i + i2 + perm[j + j2 + perm[k + k2]]]\r\n\t\tvar gi3 = gradP[i + 1 + perm[j + 1 + perm[k + 1]]]\r\n\r\n\t\t// Calculate the contribution from the four corners\r\n\t\tvar t0 = 0.6 - x0 * x0 - y0 * y0 - z0 * z0\r\n\t\tif (t0 < 0) {\r\n\t\t\tn0 = 0\r\n\t\t} else {\r\n\t\t\tt0 *= t0\r\n\t\t\tn0 = t0 * t0 * gi0.dot3(x0, y0, z0) // (x,y) of grad3 used for 2D gradient\r\n\t\t}\r\n\t\tvar t1 = 0.6 - x1 * x1 - y1 * y1 - z1 * z1\r\n\t\tif (t1 < 0) {\r\n\t\t\tn1 = 0\r\n\t\t} else {\r\n\t\t\tt1 *= t1\r\n\t\t\tn1 = t1 * t1 * gi1.dot3(x1, y1, z1)\r\n\t\t}\r\n\t\tvar t2 = 0.6 - x2 * x2 - y2 * y2 - z2 * z2\r\n\t\tif (t2 < 0) {\r\n\t\t\tn2 = 0\r\n\t\t} else {\r\n\t\t\tt2 *= t2\r\n\t\t\tn2 = t2 * t2 * gi2.dot3(x2, y2, z2)\r\n\t\t}\r\n\t\tvar t3 = 0.6 - x3 * x3 - y3 * y3 - z3 * z3\r\n\t\tif (t3 < 0) {\r\n\t\t\tn3 = 0\r\n\t\t} else {\r\n\t\t\tt3 *= t3\r\n\t\t\tn3 = t3 * t3 * gi3.dot3(x3, y3, z3)\r\n\t\t}\r\n\t\t// Add contributions from each corner to get the final noise value.\r\n\t\t// The result is scaled to return values in the interval [-1,1].\r\n\t\treturn 32 * (n0 + n1 + n2 + n3)\r\n\t}\r\n\r\n\t// ##### Perlin noise stuff\r\n\r\n\tfunction fade(t) {\r\n\t\treturn t * t * t * (t * (t * 6 - 15) + 10)\r\n\t}\r\n\r\n\tfunction lerp(a, b, t) {\r\n\t\treturn (1 - t) * a + t * b\r\n\t}\r\n\r\n\t// 2D Perlin Noise\r\n\tmodule.perlin2 = function(x, y) {\r\n\t\t// Find unit grid cell containing point\r\n\t\tvar X = Math.floor(x),\r\n\t\t\tY = Math.floor(y)\r\n\t\t// Get relative xy coordinates of point within that cell\r\n\t\tx = x - X\r\n\t\ty = y - Y\r\n\t\t// Wrap the integer cells at 255 (smaller integer period can be introduced here)\r\n\t\tX = X & 255\r\n\t\tY = Y & 255\r\n\r\n\t\t// Calculate noise contributions from each of the four corners\r\n\t\tvar n00 = gradP[X + perm[Y]].dot2(x, y)\r\n\t\tvar n01 = gradP[X + perm[Y + 1]].dot2(x, y - 1)\r\n\t\tvar n10 = gradP[X + 1 + perm[Y]].dot2(x - 1, y)\r\n\t\tvar n11 = gradP[X + 1 + perm[Y + 1]].dot2(x - 1, y - 1)\r\n\r\n\t\t// Compute the fade curve value for x\r\n\t\tvar u = fade(x)\r\n\r\n\t\t// Interpolate the four results\r\n\t\treturn lerp(lerp(n00, n10, u), lerp(n01, n11, u), fade(y))\r\n\t}\r\n\r\n\t// 3D Perlin Noise\r\n\tmodule.perlin3 = function(x, y, z) {\r\n\t\t// Find unit grid cell containing point\r\n\t\tvar X = Math.floor(x),\r\n\t\t\tY = Math.floor(y),\r\n\t\t\tZ = Math.floor(z)\r\n\t\t// Get relative xyz coordinates of point within that cell\r\n\t\tx = x - X\r\n\t\ty = y - Y\r\n\t\tz = z - Z\r\n\t\t// Wrap the integer cells at 255 (smaller integer period can be introduced here)\r\n\t\tX = X & 255\r\n\t\tY = Y & 255\r\n\t\tZ = Z & 255\r\n\r\n\t\t// Calculate noise contributions from each of the eight corners\r\n\t\tvar n000 = gradP[X + perm[Y + perm[Z]]].dot3(x, y, z)\r\n\t\tvar n001 = gradP[X + perm[Y + perm[Z + 1]]].dot3(x, y, z - 1)\r\n\t\tvar n010 = gradP[X + perm[Y + 1 + perm[Z]]].dot3(x, y - 1, z)\r\n\t\tvar n011 = gradP[X + perm[Y + 1 + perm[Z + 1]]].dot3(x, y - 1, z - 1)\r\n\t\tvar n100 = gradP[X + 1 + perm[Y + perm[Z]]].dot3(x - 1, y, z)\r\n\t\tvar n101 = gradP[X + 1 + perm[Y + perm[Z + 1]]].dot3(x - 1, y, z - 1)\r\n\t\tvar n110 = gradP[X + 1 + perm[Y + 1 + perm[Z]]].dot3(x - 1, y - 1, z)\r\n\t\tvar n111 = gradP[X + 1 + perm[Y + 1 + perm[Z + 1]]].dot3(\r\n\t\t\tx - 1,\r\n\t\t\ty - 1,\r\n\t\t\tz - 1,\r\n\t\t)\r\n\r\n\t\t// Compute the fade curve value for x, y, z\r\n\t\tvar u = fade(x)\r\n\t\tvar v = fade(y)\r\n\t\tvar w = fade(z)\r\n\r\n\t\t// Interpolate\r\n\t\treturn lerp(\r\n\t\t\tlerp(lerp(n000, n100, u), lerp(n001, n101, u), w),\r\n\t\t\tlerp(lerp(n010, n110, u), lerp(n011, n111, u), w),\r\n\t\t\tv,\r\n\t\t)\r\n\t}\r\n})(this)\r\n"]}